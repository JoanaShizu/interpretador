//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LangGrammar.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILangGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LangGrammarBaseListener : ILangGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] LangGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] LangGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] LangGrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] LangGrammarParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] LangGrammarParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] LangGrammarParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.initialization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitialization([NotNull] LangGrammarParser.InitializationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.initialization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitialization([NotNull] LangGrammarParser.InitializationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] LangGrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] LangGrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] LangGrammarParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] LangGrammarParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] LangGrammarParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] LangGrammarParser.Expression_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.input_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInput_statement([NotNull] LangGrammarParser.Input_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.input_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInput_statement([NotNull] LangGrammarParser.Input_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="LangGrammarParser.output_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutput([NotNull] LangGrammarParser.OutputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="LangGrammarParser.output_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutput([NotNull] LangGrammarParser.OutputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.control_structure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterControl_structure([NotNull] LangGrammarParser.Control_structureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.control_structure"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitControl_structure([NotNull] LangGrammarParser.Control_structureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] LangGrammarParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] LangGrammarParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_statement([NotNull] LangGrammarParser.Switch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_statement([NotNull] LangGrammarParser.Switch_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.case_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCase_clause([NotNull] LangGrammarParser.Case_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.case_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCase_clause([NotNull] LangGrammarParser.Case_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_loop([NotNull] LangGrammarParser.For_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.for_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_loop([NotNull] LangGrammarParser.For_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_loop([NotNull] LangGrammarParser.While_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_loop([NotNull] LangGrammarParser.While_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.do_while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_while_loop([NotNull] LangGrammarParser.Do_while_loopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.do_while_loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_while_loop([NotNull] LangGrammarParser.Do_while_loopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] LangGrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] LangGrammarParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_definition([NotNull] LangGrammarParser.Function_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_definition([NotNull] LangGrammarParser.Function_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_list([NotNull] LangGrammarParser.Parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_list([NotNull] LangGrammarParser.Parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_call([NotNull] LangGrammarParser.Function_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.function_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_call([NotNull] LangGrammarParser.Function_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] LangGrammarParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] LangGrammarParser.Argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] LangGrammarParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] LangGrammarParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.pointer_manipulation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointer_manipulation([NotNull] LangGrammarParser.Pointer_manipulationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.pointer_manipulation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointer_manipulation([NotNull] LangGrammarParser.Pointer_manipulationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.struct_union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_union_definition([NotNull] LangGrammarParser.Struct_union_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.struct_union_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_union_definition([NotNull] LangGrammarParser.Struct_union_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.struct_members"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_members([NotNull] LangGrammarParser.Struct_membersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.struct_members"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_members([NotNull] LangGrammarParser.Struct_membersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.preprocessor_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_directive([NotNull] LangGrammarParser.Preprocessor_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.preprocessor_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_directive([NotNull] LangGrammarParser.Preprocessor_directiveContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
