//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LangGrammar.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LangGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILangGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] LangGrammarParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] LangGrammarParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] LangGrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] LangGrammarParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaration([NotNull] LangGrammarParser.DeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaration([NotNull] LangGrammarParser.DeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitialization([NotNull] LangGrammarParser.InitializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.initialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitialization([NotNull] LangGrammarParser.InitializationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] LangGrammarParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] LangGrammarParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] LangGrammarParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] LangGrammarParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] LangGrammarParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] LangGrammarParser.Expression_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.input_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_statement([NotNull] LangGrammarParser.Input_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.input_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_statement([NotNull] LangGrammarParser.Input_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="LangGrammarParser.output_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput([NotNull] LangGrammarParser.OutputContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Output</c>
	/// labeled alternative in <see cref="LangGrammarParser.output_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput([NotNull] LangGrammarParser.OutputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.control_structure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterControl_structure([NotNull] LangGrammarParser.Control_structureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.control_structure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitControl_structure([NotNull] LangGrammarParser.Control_structureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_statement([NotNull] LangGrammarParser.If_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_statement([NotNull] LangGrammarParser.If_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.switch_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitch_statement([NotNull] LangGrammarParser.Switch_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.switch_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitch_statement([NotNull] LangGrammarParser.Switch_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.case_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCase_clause([NotNull] LangGrammarParser.Case_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.case_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCase_clause([NotNull] LangGrammarParser.Case_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFor_loop([NotNull] LangGrammarParser.For_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.for_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFor_loop([NotNull] LangGrammarParser.For_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_loop([NotNull] LangGrammarParser.While_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_loop([NotNull] LangGrammarParser.While_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.do_while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDo_while_loop([NotNull] LangGrammarParser.Do_while_loopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.do_while_loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDo_while_loop([NotNull] LangGrammarParser.Do_while_loopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] LangGrammarParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] LangGrammarParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_definition([NotNull] LangGrammarParser.Function_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.function_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_definition([NotNull] LangGrammarParser.Function_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter_list([NotNull] LangGrammarParser.Parameter_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.parameter_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter_list([NotNull] LangGrammarParser.Parameter_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction_call([NotNull] LangGrammarParser.Function_callContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction_call([NotNull] LangGrammarParser.Function_callContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument_list([NotNull] LangGrammarParser.Argument_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument_list([NotNull] LangGrammarParser.Argument_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_statement([NotNull] LangGrammarParser.Return_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_statement([NotNull] LangGrammarParser.Return_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.pointer_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointer_manipulation([NotNull] LangGrammarParser.Pointer_manipulationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.pointer_manipulation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointer_manipulation([NotNull] LangGrammarParser.Pointer_manipulationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.struct_union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_union_definition([NotNull] LangGrammarParser.Struct_union_definitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.struct_union_definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_union_definition([NotNull] LangGrammarParser.Struct_union_definitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.struct_members"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStruct_members([NotNull] LangGrammarParser.Struct_membersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.struct_members"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStruct_members([NotNull] LangGrammarParser.Struct_membersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LangGrammarParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreprocessor_directive([NotNull] LangGrammarParser.Preprocessor_directiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LangGrammarParser.preprocessor_directive"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreprocessor_directive([NotNull] LangGrammarParser.Preprocessor_directiveContext context);
}
